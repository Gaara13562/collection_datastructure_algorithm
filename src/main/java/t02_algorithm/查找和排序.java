/**
 * 1. 查找分为顺序查找和二分查找
 * 	1.1 顺序查找效率较低，但是没有限制条件，而且与数据底层存储结构无关；
 * 	1.2 二分查找效率较高，但是存储必须采用顺序存储结构，而且存储的元素必须有序；
 * 
 * 2. 查找树
 * 	2.1 二叉查找/搜索/排序树
 * 	2.2 平衡二叉树（实现方式有多个，如：AVL树、红黑树）
 * 	2.3 B树（多叉树），B+树（数据全部在底层，数据库索引的默认实现机制），B*树（索引之间有关联）
 * 
 * 3. 哈希表查找
 * 	3.1 典型代表：HashMap, HashSet(底层仍然是HashMap), Hashtable(过时，线程安全)
 * 
 * *************************************************************************************
 * 
 * 排序分类：
 * 1. 比较排序（8大排序）
 * 	1.1 交换排序，包括【冒泡排序】、【快速排序】等
 * 	1.2 选择排序，包括【基本选择排序】、【堆排序】等
 * 	1.3 插入排序，包括【直接插入排序】、【折半插入排序】、【希尔排序】等
 * 	1.4 归并排序，包括【归并排序】
 * 
 * 2. 非比较排序
 * 	2.1 主要包括【计数排序】和【基数排序】
 */
package t02_algorithm;